---
swagger: '2.0'

magma-gen-meta:
  go-package: magma/orc8r/cloud/go/services/certifier/obsidian/models
  dependencies:
    - 'orc8r/cloud/go/models/swagger-common.yml'
  temp-gen-filename: certifier-swagger.yml
  output-dir: orc8r/cloud/go/services/certifier/obsidian
  types:
    - go-struct-name: User
      filename: user_swaggergen.go


info:
  title: Certifier's User Management
  description: Certifier REST APIs
  version: 1.0.0

basePath: /magma/v1

paths:
  /user:
    get:
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
        default:
          $ref: './orc8r-swagger-common.yml#/responses/UnexpectedError'
      summary: List all usernames
      tags:
        - User
    post:
      parameters:
        - name: user
          in: body
          required: true
          schema:
            $ref: '#/definitions/user_with_policy'
      responses:
        "201":
          description: Success
        default:
          $ref: './orc8r-swagger-common.yml#/responses/UnexpectedError'
      summary: Create a user
      tags:
        - User
  /user/{username}:
    put:
      parameters:
        - $ref: '#/parameters/username'
        - name: password
          description: New password for user
          in: body
          required: true
          schema:
            properties:
              password:
                type: string
      responses:
        "204":
          description: Success
        default:
          $ref: './orc8r-swagger-common.yml#/responses/UnexpectedError'
      summary: Update user password
      tags:
        - User
    delete:
      parameters:
        - $ref: '#/parameters/username'
      responses:
        "204":
          description: Success
        default:
          $ref: './orc8r-swagger-common.yml#/responses/UnexpectedError'
      summary: Remove a user
      tags:
        - User

  /user/login:
    post:
      security: [ ] # no security
      parameters:
        - name: user
          in: body
          required: true
          schema:
            $ref: '#/definitions/user'
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
        default:
          $ref: './orc8r-swagger-common.yml#/responses/UnexpectedError'
      summary: List all the tokens given a user
      tags:
        - User
parameters:
  username:
    in: path
    name: username
    description: username
    required: true
    type: string

definitions:
  user_with_policy:
    description: an object that associates a user with its policy
    properties:
      user:
        $ref: '#/definitions/user'
      policy:
        $ref: '#/definitions/policy'
  policy:
    description: an object that defines a user's permissions to access a resource
    type: object
    required:
      - effect
      - action
      - resources
    properties:
      effect:
        type: string
        enum: [UNKNOWN, DENY, ALLOW]
      action:
        type: string
        enum: [NONE, READ, WRITE]
      resources:
        type: array
        items:
          type: string
    example:
      effect: ALLOW
      action: WRITE
      resources: "*"
  user:
    description: User's authentication info
    type: object
    required:
      - username
      - password
    properties:
      username:
        type: string
      password:
        type: string
